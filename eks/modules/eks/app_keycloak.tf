# Keycloak namespace

resource "kubernetes_namespace" "keycloak" {
  count = var.cluster_created ? 1 : 0
  metadata {
    name = "keycloak"
  }
}

# Keycloak helm chart

resource "helm_release" "keycloak" {
  count      = var.cluster_created ? 1 : 0
  name       = "keycloak"
  repository = "https://charts.bitnami.com/bitnami"
  chart      = "keycloak"
  namespace  = "keycloak"
  version    = "24.2.0"

  set {
    name  = "service.type"
    value = "NodePort"
  }

  values = [
    <<EOF
        postgresql:
          enabled: false
        externalDatabase:
          host: ${var.keycloak_db_hostname}
          port: 5432
          user: ${var.keycloak_db_credentials["user"]}
          password: ${var.keycloak_db_credentials["password"]}
          database: ${var.keycloak_db_credentials["db_name"]}
        extraEnvVars:
          - name: KEYCLOAK_PRODUCTION
            value: 'true'
          - name: KEYCLOAK_ENABLE_HTTPS
            value: 'true'
          - name: KEYCLOAK_ADMIN
            value: ${var.keycloak_credentials["user"]}
          - name: KEYCLOAK_ADMIN_PASSWORD
            value: ${var.keycloak_credentials["password"]}
        tls:
          enabled: true
          autoGenerated: true
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "1000m"
            memory: "1000Mi"
        tolerations:
        - key: "priority"
          operator: "Equal"
          value: "critical"
          effect: "NoSchedule"
        nodeSelector:
          priority: "critical"
      EOF
  ]

}

# Keycloak dns name

resource "aws_route53_record" "keycloak" {
  count   = var.cluster_created ? 1 : 0
  zone_id = var.zone_id
  name    = var.keycloak["dns_name"]
  type    = "A"

  alias {
    name                   = data.aws_lb.ingress[0].dns_name
    zone_id                = data.aws_lb.ingress[0].zone_id
    evaluate_target_health = false
  }
}

# Keycloak ingress

resource "kubernetes_ingress_v1" "keycloak" {
  count = var.cluster_created ? 1 : 0
  metadata {
    name      = "keycloak"
    namespace = "keycloak"
    annotations = merge(
      local.ingress_annotations,
      {
        "alb.ingress.kubernetes.io/backend-protocol" = "HTTPS"
      }
    )
  }

  spec {
    ingress_class_name = "alb"

    rule {
      host = var.keycloak["dns_name"]

      http {
        path {
          path = "/*"

          backend {
            service {
              name = "keycloak"
              port {
                number = 443
              }
            }
          }

        }
      }
    }

    tls {
      hosts = [var.keycloak["dns_name"]]
    }
  }
}

resource "keycloak_realm" "realm" {
  count      = var.cluster_created ? 1 : 0
  realm      = var.keycloak["realm_name"]
  enabled    = true
  depends_on = [helm_release.keycloak]
}

resource "keycloak_group" "admins" {
  count    = var.cluster_created ? 1 : 0
  realm_id = keycloak_realm.realm[0].id
  name     = "Devops_Admins"
}

resource "keycloak_group" "software_developers" {
  count    = var.cluster_created ? 1 : 0
  realm_id = keycloak_realm.realm[0].id
  name     = "Software_Developers"
}
